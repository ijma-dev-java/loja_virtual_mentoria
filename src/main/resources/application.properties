#URL do banco de dados com conexão automática caso necessário
spring.datasource.url=jdbc:postgresql://localhost:5432/loja_virtual_mentoria?autoreconnect=true
#Usuário do banco de dados
spring.datasource.username=postgres
#Senha do banco de dados
spring.datasource.password=admin
#Classe do driver do postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
#Linguagem de definição de dados do postgres
spring.jpa.hibernate.ddl-auto=update
#Plataforma do postgres
spring.datasource.platform=postgres

#Desativa erro de metadados para não aparecer no console
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = true
#Dialeto do postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
#Dialeto do hibernate
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#Path do projeto
server.servlet.context-path=/loja_virtual_mentoria

#Tamanho máximo do arquivo para upload
spring.servlet.multipart.max-file-size=10000KB
#Tamanho máximo da requisão do arquivo para upload
spring.servlet.multipart.max-request-size=10000KB
#Ativa o serviço de upload
spring.servlet.multipart.enabled=true

#Ativa a compressão de dados
server.compression.enabled=true
#Tipos de compressão de dados
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
#Tamanho minimo de compressão de dados
server.compression.min-response-size=1024
#Ativa o HTTP2
server.http2.enabled=true

#Tipo de codificação
spring.http.encoding.charset=UTF-8
#Ativa codificação
spring.http.encoding.enabled=true
#Força a codificação
spring.http.encoding.force=true
#Força a codificação por requisição
spring.http.encoding.force-request=true
#Força a codificação por resposta
spring.http.encoding.force-response=true

#Classe do pool de conexões
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#Número máximo de milissegundos que um cliente aguardará por uma conexão
spring.datasource.hikari.connection-timeout = 20000
#Número mínimo de conexões inativas mantidas pelo HikariCP em um conjunto de conexões
spring.datasource.hikari.minimum-idle= 200
#Máximo do pool de conexão
spring.datasource.hikari.maximum-pool-size= 550

#Tempo ociosos para conexão
spring.datasource.hikari.idle-timeout=10000
#Nome do pool de conexões
spring.datasource.hikari.pool-name=PoolHikari
#Ativa os processos de conexão dentro do banco
spring.datasource.dbcp2.pool-prepared-statements=true
#Portas abertas para processos - sessões dentro de conexões e execução de SQL dentro do banco de dados
spring.datasource.dbcp2.max-open-prepared-statements=550

#salvando dados no banco automaticamente
spring.datasource.hikari.auto-commit=false
#Matar a sessão de conexão do usuário
#server.servlet.session.timeout=240m
#Roolback nas transações
spring.transaction.rollback-on-commit-failure=true
#SQL em lote
spring.jpa.properties.hibernate.jdbc.batch_size=4
#Ativa para insert
spring.jpa.properties.hibernate.order_inserts=true
#Ativa para update
spring.jpa.properties.hibernate.order_updates=true
#Tamanho máximo de conexões
server.tomcat.max-connections = 50000
#Colocar processamento de performace por traz dos panos
server.tomcat.min-spare-threads=1000
#Limpar sujeira no banco de dados
spring.session.jdbc.cleanup-cron = 0 0 4 * * *

#Ativa a pasta static por completo
spring.mvc.static-path-pattern=/resoures/static/**